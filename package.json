{
  "name": "vscode-coverage-gutters",
  "displayName": "Coverage Gutters",
  "description": "Display test coverage generated by lcov or xml - works with many languages",
  "version": "2.13.0",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ryanluker/vscode-coverage-gutters"
  },
  "icon": "app_images/icon.png",
  "galleryBanner": {
    "color": "#24381b",
    "theme": "dark"
  },
  "bugs": "https://github.com/ryanluker/vscode-coverage-gutters/issues",
  "publisher": "ryanluker",
  "engines": {
    "vscode": "^1.66.0",
    "node": "^22.0.0"
  },
  "categories": [
    "Testing",
    "Other"
  ],
  "keywords": [
    "gutters",
    "code coverage",
    "lcov",
    "xml",
    "multi-root ready"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": {
      "title": "coverage-gutters",
      "properties": {
        "coverage-gutters.highlightlight": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(0, 255, 64, 0.2)",
          "description": "light themed highlight for code coverage"
        },
        "coverage-gutters.highlightdark": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(0, 122, 30, 0.4)",
          "description": "dark themed highlight for code coverage"
        },
        "coverage-gutters.partialHighlightLight": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(255, 235, 0, 0.2)",
          "description": "light theme partial highlight for code coverage"
        },
        "coverage-gutters.partialHighlightDark": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(163, 149, 0, 0.4)",
          "description": "dark theme partial highlight for code coverage"
        },
        "coverage-gutters.noHighlightLight": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(255, 0, 0, 0.2)",
          "description": "light theme partial highlight for code coverage"
        },
        "coverage-gutters.noHighlightDark": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(163, 0, 0, 0.4)",
          "description": "dark theme partial highlight for code coverage"
        },
        "coverage-gutters.showLineCoverage": {
          "type": "boolean",
          "default": false,
          "description": "show or hide the line coverage",
          "scope": "resource"
        },
        "coverage-gutters.showRulerCoverage": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "show or hide the ruler coverage"
        },
        "coverage-gutters.showGutterCoverage": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "show or hide the gutter coverage"
        },
        "coverage-gutters.ignoredPathGlobs": {
          "type": "string",
          "scope": "resource",
          "default": "**/{node_modules,venv,.venv,vendor}/**",
          "description": "paths that will be ignored by the extension"
        },
        "coverage-gutters.remotePathResolve": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "description": "helps with coverage generated outside the local file system by swapping fragments of remote paths with local ones (EG ['/var/www/', '/home/project/']). See https://github.com/ryanluker/vscode-coverage-gutters/issues/201 for more info."
        },
        "coverage-gutters.manualCoverageFilePaths": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "description": "take manual control over the absolute path to your coverage file(s). NOTE: this path must be the full absolute path, there is no support for the predefined path variables."
        },
        "coverage-gutters.coverageBaseDir": {
          "type": "string",
          "scope": "resource",
          "default": "**",
          "description": "workspaceFolder relative path or glob that will be used for coverage file lookup `${coverageBaseDir}/{${coverageFileNames}}`"
        },
        "coverage-gutters.coverageFileNames": {
          "type": "array",
          "scope": "resource",
          "default": [
            "lcov.info",
            "cov.xml",
            "coverage.xml",
            "cobertura.xml",
            "jacoco.xml",
            "coverage.cobertura.xml"
          ],
          "description": "coverage file names for the extension to automatically look for"
        },
        "coverage-gutters.coverageReportFileName": {
          "type": "string",
          "scope": "resource",
          "default": "coverage/**/index.html",
          "description": "default coverage report file names(can be glob style) to look for when using the preview command"
        },
        "coverage-gutters.customizable.status-bar-toggler-watchCoverageAndVisibleEditors-enabled": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "enable or disable the status bar item"
        },
        "coverage-gutters.customizable.context-menu": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "enable or disable quick commands in the context menu"
        }
      }
    },
    "commands": [
      {
        "command": "coverage-gutters.previewCoverageReport",
        "title": "Coverage Gutters: Preview Coverage Report"
      },
      {
        "command": "coverage-gutters.displayCoverage",
        "title": "Coverage Gutters: Display Coverage"
      },
      {
        "command": "coverage-gutters.toggleCoverage",
        "title": "Coverage Gutters: Toggle Coverage"
      },
      {
        "command": "coverage-gutters.watchCoverageAndVisibleEditors",
        "title": "Coverage Gutters: Watch"
      },
      {
        "command": "coverage-gutters.removeWatch",
        "title": "Coverage Gutters: Remove Watch"
      },
      {
        "command": "coverage-gutters.removeCoverage",
        "title": "Coverage Gutters: Remove Coverage"
      }
    ],
    "keybindings": [
      {
        "command": "coverage-gutters.previewCoverageReport",
        "key": "ctrl+shift+6",
        "mac": "shift+cmd+6"
      },
      {
        "command": "coverage-gutters.displayCoverage",
        "key": "ctrl+shift+7",
        "mac": "shift+cmd+7"
      },
      {
        "command": "coverage-gutters.watchCoverageAndVisibleEditors",
        "key": "ctrl+shift+8",
        "mac": "shift+cmd+8"
      },
      {
        "command": "coverage-gutters.removeWatch",
        "key": "ctrl+shift+9",
        "mac": "shift+cmd+9"
      },
      {
        "command": "coverage-gutters.removeCoverage",
        "key": "ctrl+shift+0",
        "mac": "shift+cmd+0",
        "win": "ctrl+shift+backspace"
      },
      {
        "command": "coverage-gutters.toggleCoverage",
        "key": "ctrl+shift+5",
        "mac": "shift+cmd+5"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "config.coverage-gutters.customizable.context-menu",
          "command": "coverage-gutters.previewCoverageReport",
          "group": "Coverage-Gutters@1"
        },
        {
          "when": "config.coverage-gutters.customizable.context-menu",
          "command": "coverage-gutters.displayCoverage",
          "group": "Coverage-Gutters@2"
        },
        {
          "when": "config.coverage-gutters.customizable.context-menu",
          "command": "coverage-gutters.watchCoverageAndVisibleEditors",
          "group": "Coverage-Gutters@3"
        },
        {
          "when": "config.coverage-gutters.customizable.context-menu",
          "command": "coverage-gutters.removeWatch",
          "group": "Coverage-Gutters@4"
        },
        {
          "when": "config.coverage-gutters.customizable.context-menu",
          "command": "coverage-gutters.removeCoverage",
          "group": "Coverage-Gutters@5"
        }
      ]
    }
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "scripts": {
    "lint": "eslint --ext .ts",
    "pretty": "eslint --fix --ext .ts",
    "pre-commit": "lint-staged",
    "compile-tests": "tsc -p . --outDir out",
    "pretest": "npm run compile-tests",
    "test": "node ./out/test/runTest.js",
    "build": "npm install && npm run lint && npm run compile",
    "prepare": "husky install",
    "compile": "npm run check-types && node esbuild.js",
    "check-types": "tsc --noEmit",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "vscode:prepublish": "npm run package",
    "package": "npm run check-types && node esbuild.js --production"
  },
  "lint-staged": {
    "{src,test}/**/*.ts": [
      "eslint --fix"
    ]
  },
  "devDependencies": {
    "@types/chai": "^4.3.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "^18.19.0",
    "@types/request": "^2.48.8",
    "@types/sinon": "^10.0.11",
    "@types/sinon-chai": "^3.2.8",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "1.66.0",
    "@typescript-eslint/eslint-plugin": "^6.18.1",
    "@typescript-eslint/parser": "^6.18.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "chai": "^4.3.6",
    "cross-env": "^7.0.3",
    "esbuild": "^0.24.2",
    "eslint": "^8.14.0",
    "husky": "^7.0.4",
    "lint-staged": "^12.3.3",
    "mocha": "^10.2.0",
    "npm-run-all": "^4.1.5",
    "sinon": "^17.0.1",
    "sinon-chai": "^3.7.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@7sean68/jacoco-parse": "2.2.0",
    "@cvrg-report/clover-json": "0.3.3",
    "cobertura-parse": "fschwaiger/cobertura-parse#82b0333cb1580f6f337b5d44b04e2f5ca8711b7e",
    "glob": "7.2.0",
    "lcov-parse": "1.0.0",
    "tslib": "2.4.0",
    "uuid": "8.3.2"
  },
  "extensionDependencies": [
    "ms-vscode.live-server"
  ]
}
